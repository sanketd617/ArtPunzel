{"version":3,"sources":["components/Nav/Nav.jsx","actions/navActions.js","components/App.jsx","reducers/navReducer.js","index.js"],"names":["fontawesome","library","add","faChevronDown","Nav","className","this","props","isOpen","onClick","toggle","icon","href","React","Component","connect","state","nav","dispatch","type","payload","App","isNavOpen","defaultState","store","createStore","combineReducers","action","ReactDOM","render","document","getElementById"],"mappings":"wTAQAA,IAAYC,QAAQC,IAAIC,K,IAElBC,E,iLAEE,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,SAAf,aAGA,yBAAKA,UAAW,UAAYC,KAAKC,MAAMC,OAAS,UAAY,IAAKC,QAAUH,KAAKC,MAAMG,QAClF,kBAAC,IAAD,CAAiBC,KAAK,kBAE1B,yBAAKN,UAAY,UAAYC,KAAKC,MAAMC,OAAS,OAAS,KACtD,uBAAGI,KAAK,KAAR,SACA,uBAAGA,KAAK,KAAR,eACA,uBAAGA,KAAK,KAAR,sB,GAbFC,IAAMC,WA8BTC,eAVS,SAACC,GAAD,MAAY,CAChCR,OAAQQ,EAAMC,IAAIT,WAGK,SAACU,GAAD,MAAe,CACtCR,OAAQ,WACJQ,EClCG,CACHC,KAAM,aACNC,QAAS,WDoCFL,CAA6CX,GElCtDiB,E,iLAEA,OACI,6BACI,yBAAKhB,UAAW,QAAUC,KAAKC,MAAMe,UAAY,SAAW,KACxD,kBAAC,EAAD,OAEJ,yBAAKjB,UAAU,c,GAPXQ,IAAMC,WAyBTC,eAVS,SAACC,GAAD,MAAY,CAChCM,UAAWN,EAAMC,IAAIT,WAGE,SAACU,GAAD,MAAe,KAM3BH,CAA6CM,G,wkBC/B5D,IAAME,EAAe,CACjBf,QAAQ,GCQNgB,EAAQC,YAAYC,YAAgB,CACtCT,IDNW,WAAyC,IAA/BD,EAA8B,uDAAtBO,EAAcI,EAAQ,uCAEnD,OAAQA,EAAOR,MACX,IAAK,aACDH,EAAK,KACEA,EADF,CAEDR,QAASQ,EAAMR,SAEnB,MAEJ,QACIQ,EAAK,KACEA,GAIf,OAAOA,MCPXY,IAASC,OAED,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OAIRM,SAASC,eAAe,W","file":"static/js/main.0137bb51.chunk.js","sourcesContent":["import React from \"react\";\nimport './nav.scss';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport fontawesome from '@fortawesome/fontawesome';\nimport {faChevronDown} from \"@fortawesome/free-solid-svg-icons\";\nimport {connect} from \"react-redux\";\nimport {toggleNavAction} from \"../../actions/navActions\";\n\nfontawesome.library.add(faChevronDown);\n\nclass Nav extends React.Component {\n    render() {\n        return (\n            <div className='nav-content'>\n                <div className='brand'>\n                    ArtPunzel\n                </div>\n                <div className={'arrow ' + (this.props.isOpen ? 'rotated' : '')} onClick={ this.props.toggle }>\n                    <FontAwesomeIcon icon=\"chevron-down\"/>\n                </div>\n                <div className={ 'links ' + (this.props.isOpen ? 'open' : '') }>\n                    <a href=\"#\">First</a>\n                    <a href=\"#\">Second Link</a>\n                    <a href=\"#\">Third option</a>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isOpen: state.nav.isOpen\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    toggle: () => {\n        dispatch(toggleNavAction())\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","\nexport const toggleNavAction = () => {\n    return {\n        type: \"TOGGLE_NAV\",\n        payload: null\n    }\n};\n","import React from 'react';\nimport './App.scss';\nimport Nav from \"./Nav/Nav\";\nimport {connect} from \"react-redux\";\nimport {toggleNavAction} from \"../actions/navActions\";\n\nclass App extends React.Component {\n  render() {\n      return (\n          <div>\n              <div className={\"nav \" + (this.props.isNavOpen ? 'opened' : '')}>\n                  <Nav />\n              </div>\n              <div className=\"main\">\n\n              </div>\n          </div>\n      );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    isNavOpen: state.nav.isOpen\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    // toggle: () => {\n    //     dispatch(toggleNavAction())\n    // }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const defaultState = {\n    isOpen: false\n};\n\nexport default function (state = defaultState, action) {\n\n    switch (action.type) {\n        case \"TOGGLE_NAV\":\n            state = {\n                ...state,\n                isOpen: !state.isOpen\n            };\n            break;\n\n        default:\n            state = {\n                ...state\n            };\n    }\n\n    return state;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport App from './components/App';\nimport {Provider} from \"react-redux\";\nimport {combineReducers, createStore} from \"redux\";\nimport navReducer from \"./reducers/navReducer\";\n// import * as serviceWorker from './serviceWorker';\n\nconst store = createStore(combineReducers({\n    nav: navReducer\n}));\n\nReactDOM.render(\n    (\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    )\n    ,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}